<launch>
	<param name="/use_sim_time" value="true" />

    <arg name="scenario" default="lab"/> <!-- lab or house-->

    <arg name="init_x" default ="0" />
    <arg name="init_y" default ="-4.4"/>
    <arg name="init_a" default ="0" />
	<arg name="goal_x" default ="2" />
	<arg name="goal_y" default ="4.85" />
    <arg name="map_name" default="robotics_lab.yaml"/>
    <arg name="map_file" default="$(find robotics_challenge)/maps/$(arg map_name)"/>
    
    <arg name="world_name" default="$(find robotics_challenge)/worlds/robotics_lab.world" if="$(eval scenario == 'lab')"/>
    <arg name="world_name" default="$(find robotics_challenge)/worlds/robotics_lab_obstacle.world" if="$(eval scenario == 'obstacle')"/>
    <arg name="world_name" default="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world" if="$(eval scenario == 'house')"/>
    <arg name="world_name" default="$(find turtlebot3_gazebo)/worlds/turtlebot3_stage_4.world" if="$(eval scenario == 'maze')"/>
	
	 <!-- start gazebo with the simulated scenario -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" >		
		<arg name="world_name" value="$(arg world_name)" />
        <arg name="paused" value="false"/>
        <arg name="gui" value="true"/>
        <arg name="debug" value="false"/>
	</include>

    <param name="robot_description" command="$(find xacro)/xacro $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" />
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_burger -x $(arg init_x) -y $(arg init_y) -z 0.02 -param robot_description" />

    <!-- for GT -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    	<param name="publish_frequency" type="double" value="30.0" />
  	</node>

    <node name="metrics" pkg="robotics_challenge" type="metrics.py" >
        <param name="output_file" value="$(find robotics_challenge)/metrics.txt"/>
        <param name="goal/x" value="$(arg goal_x)"/>
        <param name="goal/y" value="$(arg goal_y)"/>
    </node>
	<!--Start the map server for the path planner-->
 	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"/>
	<node pkg="costmap_2d" type="costmap_2d_node" name="costmap_2d" output="screen">
        <rosparam command="load" file="$(find robotics_challenge)/cfg/global_costmap_params.yaml" />
    </node>
	
	<!--Start the Montecarlo Localization module-->
    <arg name="init_x_mcl" default ="$(arg init_x)" />
    <arg name="init_y_mcl" default ="$(arg init_y)"/>
    <arg name="init_a_mcl" default ="$(arg init_a)"/>
	<node pkg="amcl" type="amcl" name="amcl" args="scan:=/scan">
		<param name="initial_pose_x" value="$(arg init_x_mcl)" /> 
        <param name="initial_pose_y" value="$(arg init_y_mcl)" />
		<param name="initial_pose_a" value="$(arg init_a_mcl)" />
	</node>

	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find robotics_challenge)/rviz/turtlebot.rviz"/>

    <!-- TODO: Include the launch files of EPD3, EPD4 and EPD5 -->
    <!-- So that your system starts automatically with the simulation-->
    <!-- You should use the directive "include" -->
</launch>
